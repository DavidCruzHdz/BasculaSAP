
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


namespace ObtenerPesoSAP.Models
{

    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;

    public partial class CPBitacora
    {
        public int CPId { get; set; }
        public int CPIdEmpresa { get; set; }
        [DisplayFormat(DataFormatString = "{0:F0}")]
        [DisplayName("N. Transporte")]
        [RegularExpression(@"[0-9]*\.?[0-9]*", ErrorMessage = "La cantidad debe contener sólo números")]
        public Nullable<decimal> CPIdTransporte { get; set; }
        [DisplayName("Economico")]
        //[DisplayFormat(DataFormatString = "{0:N}")]
        //[RegularExpression(@"[0-9]*\.?[0-9]*", ErrorMessage = "La cantidad debe contener sólo números")]
        [MaxLength(20), MinLength(1)]
        [Required(AllowEmptyStrings = false, ErrorMessage = "El numero de economico no debe ir vacio")]
        [StringLength(20, ErrorMessage = "Solo se permiten 20 carateres")]
        public string CPNumEconomico { get; set; }
        [DisplayName("Placas")]
        [MaxLength(20), MinLength(1)]
        [Required(AllowEmptyStrings = false, ErrorMessage = "la placa no puede ir vacio")]
        [StringLength(20, ErrorMessage = "Solo se permiten 20 carateres")]
        public string CPPlaca { get; set; }
        [DisplayName("Carta Porte")]
        [MaxLength(20), MinLength(1)]
        [Required(AllowEmptyStrings = false, ErrorMessage = "El numero de carta porte no bebe ir vacio")]
        [StringLength(20, ErrorMessage = "Solo se permiten 20 carateres")]
        public string CPNumPorte { get; set; }

        [DisplayName("Conductor")]
        [MaxLength(20), MinLength(1)]
        [Required(AllowEmptyStrings = false, ErrorMessage = "Teclee correctamente el nombre del conductor")]
        [StringLength(20, ErrorMessage = "Solo se permiten 20 carateres")]

        public string CPNomConductor { get; set; }
        [DisplayName("Celular")]
        //[Required(AllowEmptyStrings = false, ErrorMessage = "El numero de celular no debe ir vacio")]
        [RegularExpression(@"[0-9]*\.?[0-9]*", ErrorMessage = "La cantidad debe contener sólo números")]
        public string CPNumCelular { get; set; }
        [DisplayName("Peso Tara")]
        //[DisplayFormat(DataFormatString = "{0:N0}")]
        [RegularExpression(@"[0-9]*\.?[0-9]*", ErrorMessage = "La cantidad debe contener sólo números y dos decimales")]
        public Nullable<double> CPPesoEntrada { get; set; }
        [DisplayName("Peso Bruto")]
        //[DisplayFormat(DataFormatString = "{0:N0}")]
        [RegularExpression(@"[0-9]*\.?[0-9]*", ErrorMessage = "La cantidad debe contener sólo números y dos decimales")]
        public Nullable<double> CPPesoSalida { get; set; }
        [DisplayName("Peso Neto")]
        //[DisplayFormat(DataFormatString = "{0:N0}")]
        [RegularExpression(@"[0-9]*\.?[0-9]*", ErrorMessage = "La cantidad debe contener sólo números y dos decimales")]
        public Nullable<double> CPPesoNeto { get; set; }
        public Nullable<decimal> CPIdDocumento { get; set; }
        [DisplayName("Material")]
        [Required(AllowEmptyStrings = false, ErrorMessage = "Seleccione el tipo de material a transportar")]
        public Nullable<decimal> CPIdMaterial { get; set; }
        [DisplayName("Cliente")]
        public Nullable<decimal> CPIdCliente { get; set; }

        public Nullable<int> CPPartida { get; set; }
        [DisplayName("Entrada")]
        [DataType(DataType.Date), DisplayFormat(DataFormatString = "{0:dd/MM/yyyy}", ApplyFormatInEditMode = true)]
        public Nullable<System.DateTime> CPFechaEntrada { get; set; }
        [DisplayName("Salida")]
        [DataType(DataType.Date), DisplayFormat(DataFormatString = "{0:dd/MM/yyyy}", ApplyFormatInEditMode = true)]
        public Nullable<System.DateTime> CpFechaSalida { get; set; }
        public Nullable<bool> CPEntrada { get; set; }
        public Nullable<bool> CPSalida { get; set; }
        [DisplayName("Capturo Entrada")]
        public int CPIdUsuarioEnt { get; set; }
        [DisplayName("Capturo Salidas")]
        public int CPIdUsuarioSal { get; set; }

        public Nullable<int> CPNumDePasos { get; set; }

        public Nullable<int> CPEstatus { get; set; }



        public virtual CPCatEmpresas CPCatEmpresas { get; set; }

        public virtual CPUsuario CPUsuario { get; set; }

        public virtual CPUsuario CPUsuario1 { get; set; }

    }

}
