

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


namespace ObtenerPesoSAP.Models
{

using System;
using System.Data.Entity;
using System.Data.Entity.Infrastructure;

using System.Data.Entity.Core.Objects;
using System.Linq;


public partial class BDObtenerPesoSAPEntities : DbContext
{
    public BDObtenerPesoSAPEntities()
        : base("name=BDObtenerPesoSAPEntities")
    {

    }

    protected override void OnModelCreating(DbModelBuilder modelBuilder)
    {
        throw new UnintentionalCodeFirstException();
    }


    public virtual DbSet<CPAutorizaciones> CPAutorizaciones { get; set; }

    public virtual DbSet<CPCatEmpresas> CPCatEmpresas { get; set; }

    public virtual DbSet<CPCatMateriales> CPCatMateriales { get; set; }

    public virtual DbSet<CPCatTipoCaptura> CPCatTipoCaptura { get; set; }

    public virtual DbSet<CPCatTiposDeVehiculos> CPCatTiposDeVehiculos { get; set; }

    public virtual DbSet<CPCatUnidades> CPCatUnidades { get; set; }

    public virtual DbSet<CPPantallas> CPPantallas { get; set; }

    public virtual DbSet<CPPantallasPermisos> CPPantallasPermisos { get; set; }

    public virtual DbSet<CPPartidas> CPPartidas { get; set; }

    public virtual DbSet<CPPermisosPlantas> CPBascula { get; set; }

    public virtual DbSet<CPRol> CPRol { get; set; }

    public virtual DbSet<CPUsuario> CPUsuario { get; set; }

    public virtual DbSet<CPCatMensajesSAP> CPCatMensajesSAP { get; set; }

    public virtual DbSet<CPCatProcesos> CPCatProcesos { get; set; }

    public virtual DbSet<CPLogDeProcesos> CPLogDeProcesos { get; set; }

    public virtual DbSet<CPBitacora> CPBitacora { get; set; }


    public virtual ObjectResult<SpRangoFechasBitacora_Result> SpRangoFechasBitacora(Nullable<int> idPlanta, Nullable<System.DateTime> fI, Nullable<System.DateTime> fF)
    {

        var idPlantaParameter = idPlanta.HasValue ?
            new ObjectParameter("IdPlanta", idPlanta) :
            new ObjectParameter("IdPlanta", typeof(int));


        var fIParameter = fI.HasValue ?
            new ObjectParameter("FI", fI) :
            new ObjectParameter("FI", typeof(System.DateTime));


        var fFParameter = fF.HasValue ?
            new ObjectParameter("FF", fF) :
            new ObjectParameter("FF", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpRangoFechasBitacora_Result>("SpRangoFechasBitacora", idPlantaParameter, fIParameter, fFParameter);
    }

}

}

