@model ObtenerPesoSAP.Models.CPCatMateriales
<br />
<br />

@{
    ViewBag.Title = "Agregar nuevo";
}



<div class="col-md-12 jumbotron" style="color:#000000; font:caption; background-color:#5c87b2;">
    <h2>Agregar nuevo</h2>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Datos de material</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            
            <div class="form-group">
                @Html.LabelFor(model => model.CPIdMaterialAnt, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CPIdMaterialAnt, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CPIdMaterialAnt, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CPIdMaterialSAP, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CPIdMaterialSAP, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CPIdMaterialSAP, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CPDescripcionMaterial, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CPDescripcionMaterial, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CPDescripcionMaterial, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CPPesoRequerido, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CPPesoRequerido, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CPPesoRequerido, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CPFactorMin, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CPFactorMin, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CPFactorMin, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CPFactorMax, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CPFactorMax, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CPFactorMax, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CPSePesa, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    No:   @Html.RadioButton("CPSePesa", "0")
                    Si: @Html.RadioButton("CPSePesa", "1")
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CPRequiereAutoriza, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    No:   @Html.RadioButton("CPRequiereAutoriza", "0")
                    Si: @Html.RadioButton("CPRequiereAutoriza", "1")
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CPIdUnidadMedida, "Unidad de Medida", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("CPIdUnidadMedida", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CPIdUnidadMedida, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Grabar" class="btn btn-danger" />
                    @Html.ActionLink("Regresar", "Index", "CPCatMateriales", new { IdPlanta = @ViewBag.IdPlanta, IdAnio = @ViewBag.anio }, new { @class = "btn btn-danger", @style = "display:inline" })
                </div>
            </div>
        </div>
    }
</div>
